import { Construct } from 'constructs';
import { IVpc } from 'aws-cdk-lib/aws-ec2';
import { HostedZoneAttributes, IHostedZone } from 'aws-cdk-lib/aws-route53';
export declare type DeploymentEnv = 'dev' | 'test' | 'sit' | 'prod';
export declare enum WesdigitalAccount {
    AdvantagePlatformSandpit = "765018113112",
    AdvantageAppSandpit = "317585435641",
    AdvantageAppNonProd = "348279902832",
    AdvantageAppProd = "554417847584",
    CICDTooling = "345954686127"
}
export declare type WesdigitalAccountNumber = `${WesdigitalAccount}`;
export interface AccountConfig {
    ecrAccount: string;
    internalLb: string;
    vpcId: string;
    privateSubnetIds: string[];
    mskClusterArn: string;
    mskClusterName: string;
    lambdaDatadogApiKeySecretArn: string;
    publicHostedZoneAttrs: HostedZoneAttributes;
    benefits?: {
        eventBusName: string;
    };
}
export interface AccountDetails {
    resourcePrefix: string;
    envConfigs: Map<DeploymentEnv, AccountConfig>;
}
export interface EnvProps {
    account: WesdigitalAccountNumber;
    env: DeploymentEnv;
}
export declare const DeploymentRegion = "ap-southeast-2";
export declare const DatadogImage = "datadog-agent";
export declare const DatadogImageTag = "7";
export declare const AwsAccounts: Map<WesdigitalAccountNumber, AccountDetails>;
export declare const RegionAbbreviation: {
    'ap-southeast-2': string;
};
export declare const AvailabilityZones: {
    'ap-southeast-2': string[];
};
export declare const wesDigitalVpc: (scope: Construct, id: string, props: EnvProps) => IVpc;
export declare const publicHostedZone: (scope: Construct, id: string, props: EnvProps) => IHostedZone;
export declare const wesDigitalEnv: (props: EnvProps) => AccountConfig;
export declare const accountResourcePrefix: (accountNumber: WesdigitalAccountNumber) => string;
export declare const datadogLambdaName: (accountNumber: WesdigitalAccountNumber) => string;
export declare const lambdaDatadogApiKeySecretArn: (props: EnvProps) => string;
export declare const deployerRoleArns: (scope: Construct) => string[];
