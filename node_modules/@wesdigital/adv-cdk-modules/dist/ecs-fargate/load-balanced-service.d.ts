import { Construct } from 'constructs';
import { ApplicationLoadBalancedFargateService } from 'aws-cdk-lib/aws-ecs-patterns';
import { ApplicationLoadBalancer, HealthCheck as ALBHealthCheck } from 'aws-cdk-lib/aws-elasticloadbalancingv2';
import { Key } from 'aws-cdk-lib/aws-kms';
import { FargateAutoscalingProps, FargateModuleProps } from './props';
export interface LoadBalancedServiceAutoscalingProps extends FargateAutoscalingProps {
    metric: 'CPU' | 'Requests' | 'Memory';
}
export interface LoadBalancedServiceModuleProps extends FargateModuleProps {
    albHealthCheck: ALBHealthCheck;
    autoscaling?: LoadBalancedServiceAutoscalingProps;
}
export declare class LoadBalancedService extends Construct {
    private readonly _kmsKey;
    private readonly _service;
    get service(): ApplicationLoadBalancedFargateService;
    get loadBalancer(): ApplicationLoadBalancer;
    get kmsKey(): Key;
    constructor(scope: Construct, id: string, props: LoadBalancedServiceModuleProps);
}
